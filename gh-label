#!/bin/bash

# Based on https://github.com/vilmibm/gh-user-status/blob/533285348c0354064d79053da39aa75f17b5c55f/gh-user-status

set -e

# Get the latest tag from the remote (none local if in a shallow clone).
repo=heaths/gh-label
tag="$(git ls-remote --exit-code --sort=-v:refname --tags https://github.com/${repo}.git | sed -E 's/^[[:xdigit:]]+[[:space:]]+refs\/tags\/(.+)/\1/;q')"

extensionPath="$(dirname "$0")"
arch="$(uname -m)"
exec=""

if uname -a | grep Msys > /dev/null; then
  if [ $arch = "x86_64" ]; then
    exe="windows-x86_64"
  elif [ $arch = "i686" ]; then
    exe="windows-i386"
  elif [ $arch = "i386" ]; then
    exe="windows-i386"
  fi
elif uname -a | grep Darwin > /dev/null; then
  if [ $arch = "x86_64" ]; then
    exe="darwin-x86_64"
  fi
elif uname -a | grep Linux > /dev/null; then
  if [ $arch = "x86_64" ]; then
    exe="linux-x86_64"
  elif [ $arch = "i686" ]; then
    exe="linux-i386"
  elif [ $arch = "i386" ]; then
    exe="linux-i386"
  fi
fi

if [ "${exe}" == "" ]; then
  if [ "$(which go)" == "" ]; then
    echo "Go must be installed to use this gh extension on this platform: https://golang.org"
    exit 1
  fi

  exe="cmd.out"

  if [[ ! -x "${extensionPath}/bin/${exe}" ]]; then
    mkdir -p "${extensionPath}/bin"

    pushd "${extensionPath}" > /dev/null
    go build -o "bin/${exe}"
    popd > /dev/null
  fi
else
  if [[ ! -x "${extensionPath}/bin/${exe}" ]]; then
    mkdir -p "${extensionPath}/bin"
    rm -f "${extensionPath}/bin/*"

    echo "Downloading ${exe} from https://github.com/${repo}/releases/tag/${tag}"
    gh release -R "${repo}" download "${tag}" -p "${exe}" --dir="${extensionPath}/bin"
    chmod +x "${extensionPath}/bin/${exe}"
  fi
fi

exec "${extensionPath}/bin/${exe}" "$@"
